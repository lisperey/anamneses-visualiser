import { DynamicModule, Provider, OnApplicationShutdown } from '@nestjs/common';
import { KnexModuleAsyncOptions, KnexModuleOptions } from './interfaces';
import { ModuleRef } from '@nestjs/core';
export declare class KnexCoreModule implements OnApplicationShutdown {
    private readonly options;
    private readonly moduleRef;
    constructor(options: KnexModuleOptions, moduleRef: ModuleRef);
    static forRoot(options: KnexModuleOptions, connection?: string): DynamicModule;
    static forRootAsync(options: KnexModuleAsyncOptions, connection: string): DynamicModule;
    onApplicationShutdown(): Promise<any>;
    static createAsyncProviders(options: KnexModuleAsyncOptions): Provider[];
    static createAsyncOptionsProvider(options: KnexModuleAsyncOptions): Provider;
    private static createConnectionFactory;
}
